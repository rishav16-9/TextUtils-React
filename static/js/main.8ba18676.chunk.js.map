{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","console","log","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","data-bs-dismiss","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.8ba18676.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n       <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n       <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"    aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n              </li> */}\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: 'set title here',\r\n  aboutText: 'About'\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    // text = \"new text\" // wrong way to change the state\r\n    // setText(\"new text\");  // Correct way to change the state\r\n\r\n    const handleUppercaseClick = ()=>{\r\n        // console.log(\"Upper case was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase!\", \"success\");\r\n    }\r\n    \r\n    const handleLowercaseClick = ()=>{\r\n        // console.log(\"Upper case was clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"converted to lowercase!\", \"success\");\r\n    }\r\n\r\n    const handleClearClick = ()=>{ \r\n        let newText = '';\r\n        setText(newText)\r\n        props.showAlert(\"Text Cleared!\", \"success\");\r\n    }\r\n    \r\n    const handleCopy = () => {\r\n        console.log(\"I am copy\");\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        text.setSelectionRange(0, 9999);\r\n        navigator.clipboard.writeText(text.value);\r\n        // navigator.clipboard.writeText(text);\r\n        props.showAlert(\"Text Copied!\", \"success\");\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed!\", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"On Change\");\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n\r\n    return (\r\n    <>\r\n    <div className='container' style={{color: props.mode==='dark'?'white':'#042743'}}>   \r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n\r\n        {/* Button for Upper Text */}\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUppercaseClick}>Convert to Uppercase</button>\r\n\r\n        {/* Button for Lower Text */}\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLowercaseClick}>Convert to Lowercase </button>\r\n\r\n        {/* Button to clear the Text */}\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear the textarea </button>\r\n\r\n        {/* Button to copy the Text */}\r\n        <button id = \"myBox\" className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy the text </button>\r\n\r\n        {/* Button to remove extra spaces the Text */}\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove ectra spaces</button>\r\n\r\n\r\n    </div>\r\n    \r\n    <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n        <h2>Your Text Summary</h2>\r\n        <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n        <p>{0.008 * text.split(\" \").length} minutes to read te text</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"ENter something in the text box to preview here\"}</p>\r\n    </div>\r\n\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word) =>{\r\n      const lower = word.toLowerCase();\r\n      return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n\n// import {\n  // BrowserRouter as Router,\n  // Switch,\n  // Routes,\n  // Route,\n  //Link\n// } from \"react-router-dom\";\n\nfunction App() {\n\n  const [mode, setMode] = useState('light'); // whether tells dark mode is enabled or not\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n   \n  }\n  const toggleMode = ()=>{\n    if (mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      // document.title = 'TextUtils Dark mode enables' //changes the title\n      // setInterval(() => {                            // It displays the title frequently\n      //   document.title = 'TextUtil is amazing';\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = 'Install TextUtil now';\n      // }, 1500);\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      // document.title = 'TextUtils Light mode enables'  Changes the title\n    }\n  }\n\n  return(\n    <>\n      {/* for navbar props */}\n      {/* <Navbar title = \"TextUtil\" aboutText = \"About TextUtil\"/> */}\n      {/* <Navbar/> */}\n      {/* <Router> */}\n        <Navbar title = \"TextUtil\" mode={mode} toggleMode={toggleMode}/>\n        <Alert alert = {alert}/>\n          {/* for TextForm props */}\n        <div className=\"container my-3\">\n          <TextForm showAlert={showAlert} heading = \"Enter The Text To Analyze Below\" mode={mode}/>\n          \n              {/* For version 6 *\n           <Routes>\n              <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading = \"Enter The Text To Analyze Below\" mode={mode}/>}/>\n              <Route exact path=\"/about\" element={<About />}/>\n            </Routes> \n\n            Exact match\n                /users --> component 1\n                /users/home --> component 2\n                React uses partial matching so we use exact path\n                For version 5\n\n              <Switch>\n                <Route path=\"/about\">\n                  <About />\n                </Route>\n                <Route path=\"/\">\n                  <TextForm showAlert={showAlert} heading = \"Enter The Text To Analyze Below\" mode={mode}/>\n                </Route>\n              </Switch>       */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}